{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortBy","goods","visibleGoods","sort","item1","item2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAASH,EAASM,MAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAjCD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAMP,EAASc,SACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAMb,EAASgB,OACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAIfC,QAAQC,IAAIb,EAAUH,GAEfM,EAOOW,CAAkBpB,EAAiB,CAAEM,WAAUH,eAW7D,OAEE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SAAU,UAAW,CACnB,WAAYjB,IAAaP,EAASc,WAGtCW,QAAS,kBAAMjB,EAAUR,EAASc,WAPpC,iCAYA,wBACES,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CACtB,WAAYjB,IAAaP,EAASgB,SAGtCS,QAAS,kBAAMjB,EAAUR,EAASgB,SAPpC,4BAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CACtB,YAAapB,IAGjBqB,QA5Cc,WACpBpB,GAAYD,IAoCR,sBAYEG,IAAaP,EAASM,OACN,IAAfF,IAED,wBACEmB,KAAK,SACLD,UAAU,6BACVG,QAnDU,WAClBpB,GAAW,GACXG,EAAUR,EAASM,OA8Cb,sBAUJ,6BACGG,EACEiB,KAAI,SAACC,GAAD,OAAU,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7HjDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f847a60c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport type ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case (SortType.ALPHABET):\n        return item1.localeCompare(item2);\n\n      case (SortType.LENGTH):\n        return item1.length - item2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortBy] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  const handleReverse = () => {\n    setReverse(!isReversed);\n  };\n\n  const handleReset = () => {\n    setReverse(false);\n    setSortBy(SortType.NONE);\n  };\n\n  return (\n\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortBy(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-warning', {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE\n        || isReversed === true)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods\n          .map((item) => <li data-cy=\"Good\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}